#!/usr/bin/perl
#---------------------------------------------------------------------
#  $Id: module.glomule.2,v 1.6 2000/07/12 04:52:28 eric Exp $
#
#  eThreads - revolutionizing forums... again.
#  Copyright (C) 1999 Eric Richardson
#
#       This program is free software; you can redistribute it and/or
#       modify it under the terms of the GNU General Public License
#       as published by the Free Software Foundation; either version 2
#       of the License, or (at your option) any later version.
#
#       This program is distributed in the hope that it will be useful,
#       but WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#       GNU General Public License for more details.
#
#       You should have received a copy of the GNU General Public License
#       along with this program; if not, write to the Free Software
#       Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  
#       02111-1307, USA.
#
#       For information, contact eThreads:
#           ethreads@ethreads.com
#           http://ethreads.com
#
#  This is a forum_type module.  It contains code for displaying 
#  forums of its type.
#
#  forum type:  news
#     News forums are single level and display with a news story 
#     type format
#
#---------------------------------------------------------------------

package eThreads::glomule::2;

use eThreads::core;
use eThreads::viewer;
use strict;
use vars qw($core $viewer %e $m_db $db %input %posts %post);

#----------

sub init {
	my $class = shift;
	my %args = @_;
	$core = eThreads::core->substart();
	$viewer = eThreads::viewer->substart();
	bless ( { %args }, $class );
}

#----------

sub settings{ my %s = (
	type 	=> 'news',
	author	=> 'e@ethreads.com',

	options	=> {
		disable_top_level_posting	=> 1,
		get_body_in_get_posts		=> 1,
		d_sort_field				=> "timestamp",
		find_new_posts				=> 0,
	},
);}

#----------

sub fields_schema { my %s = (
	id				=> {
		def			=> "int(11) DEFAULT '0' NOT NULL auto_increment",
		d_value		=> "#{id}",
		p_key		=> 1,
	},
	title			=> {
		def	 		=> "varchar(150) DEFAULT '' NOT NULL",
		notnull	 	=> 1,
		search	  	=> 1,
	},
	poster		  	=> {
		def		 	=> "text",
		auth_value  => $e{user}{name},
		search	  	=> 1,
	},
	poster_email	=> {
		def		 	=> "text",
		auth_value  => $e{user}{email},
	},
	timestamp		=> {
		def		 	=> "int(11)",
		type		=> "datetime",
		d_value	 	=> time,
	},
	child_of		=> {
		def		 	=> "int(11)",
		d_value	 	=> $input{reply_to},
	},
	intro			=> {
		def				 	=> "text",
		allow_html		  	=> 1,
		search	  			=> 1,
		convert_newlines	=> 1,
	},
	body			=> {
		def				 	=> "text",
		allow_html		  	=> 1,
		convert_newlines	=> 1,
		search	  			=> 1,
	},
	status		  	=> {
		def			=> "tinyint(3) unsigned",
		d_value	 	=> "#{status}",
	},
	username		=> {
		def		 	=> "varchar(30)",
		auth_value  => $e{user}{username},
	},
	children		=> {
		def		 	=> "int(11)",
	},
); return %s;}

#----------

sub prefs {my %p = (
	d_depth		 => {
		d_val	   => "0",
		descript	=> qq(
			How many levels of posts should be dropped by default.
		),
	},
	datetime_format	 => {
		d_val	   => "%D %I:%M%p",
		descript	=> qq(
			How eThreads should format fields marked as containing date & time.
		),
	},
	date_format	 => {
		d_val	   => "%D",
		descript	=> qq(
			How eThreads should format fields marked as containing a date.
		),
	},
	max_threads	 => {
		d_val	   => "20",
		descript	=> qq(
			How many threads eThreads should print per page.
		),
	},
);return %p;}

#----------

# fields used in $core->get_posts()
sub fields_get_posts {my @f = (
	'id','title','poster','poster_email','timestamp','child_of','intro',
	'status','length(body)'
);return @f;}

# fields used in $core->get_post()
sub fields_get_post {my @f = (
	'title','poster','poster_email','username','timestamp','body',
	'intro','child_of','status'
);return @f;}

#----------

sub data_tbls {
	my $class = shift;

	my %tbls = (
		$class->{main_tbl}	=> {
			$class->fields_schema
		},
	);
}

#----------

sub disable_buttons {
	if ($e{script} eq $e{settings}{scripts}{admin} || $e{user}{rights}{moderate}) {
		return ();
	} else {
		return ('post','reply','signup','login');
	}
}

#----------

sub preset_data {
	my $class = shift;

	$class->{main_tbl} = "glomdata_".$class->{name};
	$class->{main_tbl} =~ s!/!WOOP!g;

	my %g = (
		fields		=> ['intro','main_tbl'],
		intro		=> {
			visible	=> 0,
		},
		main_tbl	=> {
			visible	=> 0,
			d_value	=> $class->{main_tbl},
		}
	);

	return %g;
}

#----------

sub theme_fields { return (
	'header','footer','thread_table_top','thread_html','thread_table_bottom',
	'post_html','c_post_html','profile_html','search_box','search_results_top',
	'search_results_html','search_results_bottom'
);}

#------------------------#
# forum_type subroutines #
#------------------------#

sub startup {
	# this subroutine must be present in all forum_type modules.  It 
	# is called when the forum_type is loaded.  If you have anything 
	# you want to do at startup, do it here

	# let's do some function re-defining
	if ($e{script} eq"$e{settings}{scripts}{view}") {
		# unlike normal forums, we only want viewers viewing
		$e{functions}{post}{view} = 0;
		$e{functions}{login}{view} = '';
		$e{functions}{signup}{view} = '';
	} elsif ($e{script} eq"$e{settings}{scripts}{members}") {
		$e{functions}{post}{members} = 0;
	} elsif ($e{script} eq"$e{settings}{scripts}{admin}") {
		$core->auth::require("moderate");
	}
}

#----------

sub glomule::disable_buttons {
	if ($e{script} eq $e{settings}{scripts}{view}) {
		return ('post','reply','signup','login');
	}
}

#----------

sub eThreads::viewer::print_thread {
	my ($class,$parent,$id,$indent) = @_;
	my %tmp = %{$posts{0}{$id}};
	$e{status}{thread_count}++;
	my ($date,$time) = $core->timestamp_to_date($tmp{timestamp});
	my ($color,$f_color);
	my $even = $e{status}{thread_count}%2;
	if ($even) {
		$color = $e{tweak}{threadsEVEN_ROW_COLOR};
		$f_color = $e{tweak}{threadsEVEN_FONT_COLOR};
	} else {
		$color = $e{tweak}{threadsODD_ROW_COLOR};
		$f_color = $e{tweak}{threadsODD_FONT_COLOR};
	}

	$_ = $e{look}{thread_html};
		if ($tmp{'length(body)'}) {
			s!#{link}!<a href="$e{forum}{path}/$e{script}/$input{forum}/view_post?id=$tmp{id}">!gi;
			s!#{/link}!</a>!gi;
		} else {
			s!#{link}!!gi;
			s!#{/link}!!gi;
		}

		foreach my $key (keys %tmp) {
			$viewer->parse_placeholder($key,\$tmp{$key});
		}
	print;
}

#----------

sub first_paragraph_of {
	my $input = shift;
	$input =~ m!^([^\r]+)!;
	return $1;
}

#-------------#
# Change Logs #
#-------------#

# $Log: module.glomule.2,v $
# Revision 1.6  2000/07/12 04:52:28  eric
# * fixed bug in glomule preset_data code
#
# Revision 1.5  2000/07/11 18:53:26  eric
# * ummm...  i did stuff...  good stuff, i think.
#   (WTF do you expect?!?!?  It's a 1000+ line diff)
#
# Revision 1.4  2000/07/10 18:52:02  eric
# * misc
#
# Revision 1.3  2000/06/07 18:14:49  eric
# * glomule creation fixes
# * glomule deletion fixes
# * fixed all old references to presets
# * domain rooting work
# * glomule module work
# * assorted other fixes
#
# Revision 1.2  2000/05/01 21:10:57  eric
# * a little domain rooting work
# * some fixes for Netscape's sucky CSS handling
#
# Revision 1.1  2000/04/29 16:53:37  eric
# * added files created during eThreads1_2-devel to main tree
#
# Revision 1.1.2.3  2000/04/22 17:00:28  eric
# * lots of class fixes
# * added the ability for glomules to choose buttons to delete
#
# Revision 1.1.2.2  2000/03/27 20:54:36  eric
# * assorted tweaks and fixes
# * rewrote the news glomule module
#
# Revision 1.1.2.1  2000/03/06 21:57:20  eric
# * created glomule registry
# * coined "glomule" term to refer to data holders (formerly we used
#   "forum", but that's too specific).  Glomule comes from the word
#   agglomeration, meaning "a confused or disordered mass".
#
# Revision 1.1.2.5.4.1  1999/10/16 17:04:48  eric
# * fixed some function map related stuff
# * added code to news forum_type locking down access
#
# Revision 1.1.2.5  1999/09/03 12:25:04  eric
# * rolled $u_db into $m_db
#
# Revision 1.1.2.4  1999/08/26 14:04:25  eric
# * updated all headers to conform to standard eThreads header
#
# Revision 1.1.2.3  1999/08/25 18:51:25  eric
# * some changes to forum creation code
# * removed some hardcoded html table widths
#
# Revision 1.1.2.2  1999/08/24 20:08:12  eric
# * merging in changes from BCI tree
#
# Revision 1.1.2.1  1999/08/18 06:30:53  eric
# * forum_type modules and code
# * first revision of instamailer (subscription notifier)
# * some subscription code in members
#

#-------------

1;
