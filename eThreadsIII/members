#!/usr/bin/perl
#---------------------------------------------------------------------
#  $Id: members,v 1.12 2000/07/14 15:37:51 eric Exp $
#
#  eThreads - revolutionizing forums... again.
#  Copyright (C) 1999 Eric Richardson
#
#       This program is free software; you can redistribute it and/or
#       modify it under the terms of the GNU General Public License
#       as published by the Free Software Foundation; either version 2
#       of the License, or (at your option) any later version.
#
#       This program is distributed in the hope that it will be useful,
#       but WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#       GNU General Public License for more details.
#
#       You should have received a copy of the GNU General Public License
#       along with this program; if not, write to the Free Software
#       Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  
#       02111-1307, USA.
#
#       For information, contact eThreads:
#           ethreads@ethreads.com
#           http://ethreads.com
#
#  This is the authenticated viewer script for eThreadsIII.  It 
#  uses eThreads::(core|viewer) to provide all functionality.
#
#---------------------------------------------------------------------

use eThreads::core;
use eThreads::viewer;
use strict;
use vars qw($viewer $core %e $db $m_db %posts %input);

$core = eThreads::core->start(
	script	=> "members",
);

$viewer = eThreads::viewer->start($core);

#---------#
# Routing #
#---------#

if ($e{status}{sidetrack}) {
	# do nothing...  absolutely nothing.
} else {
	$core->function_finder;
}

#-------------#
# Subroutines #
#-------------#

sub main_menu {
	$core->header();

	if ($input{drop} eq"all") {
		$core->get_posts(2);
	} else {
		$core->get_posts(0,0);
	}
	
	print <<EOP;
	$e{forum}{intro}
	<p>
EOP
	$viewer->thread_table_top;
	$viewer->print_threads(0,1,0);
	$viewer->thread_table_bottom;

	$core->buttons("top");

	$core->footer;
}

#----------

sub options {
	$core->header("User Options: $e{user}{username}");

	my $width = ($e{tweak}{htmlCOL2_LEFT} + $e{tweak}{htmlCOL2_RIGHT});

	print <<EOP;
	<table border=0 width=$width>
	<tr bgcolor=#$e{tweak}{htmlTITLE_BAR_COLOR}>
		<td colspan=2>
			<font color=#$e{tweak}{htmlTITLE_FONT_COLOR}>
				<b>Forum Options for User $e{user}{username}</b>
			</font>
		</td>
	</tr>
	<tr bgcolor=#$e{tweak}{htmlROW1_COLOR}>
		<td width=$e{tweak}{htmlCOL2_LEFT}>
			<a href="modify_profile">Modify User Profile</a>
		</td>
		<td width=$e{tweak}{htmlCOL2_RIGHT}>
			Change your email address, name, signature, etc.
		</td>
	</tr>
EOP
	print <<EOP if ($e{settings}{email_subs});
	<tr bgcolor=#$e{tweak}{htmlROW2_COLOR}>
		<td>
			<a href="manage_email">Manage email Subscriptions</a>
		</td>
		<td>
			At a glance view of email notification subscriptions.
		</td>
	</tr>
	<tr bgcolor=#$e{tweak}{htmlROW1_COLOR}>
		<td>
			<a href="subscribe?id=0">Subscribe to Forum</a>
		</td>
		<td>
			Recieve email every time a message is posted to this forum.
		</td>
	</tr>
EOP
	print <<EOP;
	<tr bgcolor=#$e{tweak}{htmlROW2_COLOR}>
		<td>
			<a href="modify_prefs">Modify Forum Prefs</a>
		</td>
		<td>
			Customize small pieces of forum behavior.
		</td>
	</tr>
	</table>
	<p>
	<a href="$e{forum}{path}/$e{script}/$input{forum}/">Return to Forum</a>
	
EOP

	$core->footer;
}

#----------

sub modify_prefs {
	$core->header("Modify Forum Prefs");

	$viewer->change_forum_prefs(
		user	=> $e{user}{id},
		forum	=> $e{forum}{id},
	);

	$core->footer;
}

#----------

sub subscribe {
	$core->header("Subscribe to Notification");

	if ($input{submit}) {
		my $subscribe = $m_db->prepare("
			insert into $e{settings}{db}{tbls}{subscriptions} values(?,?,?,?,?)
		");
		
		$core->bail(0,"subscribe failure: ".$m_db->errstr) unless (
			$subscribe->execute(
				$e{forum}{id},$e{user}{id},$input{id},$input{level},$input{contents}
			)
		);

		print <<EOP;
		You are now subscribed to post $input{id}.
		<p>
EOP
		if ($input{id}) {
			print qq(<a href="$e{forum}{path}/$e{script}/$input{forum}/view_post?id=$input{id}">Return to Post</a>);
		} else {
			print qq(<a href="$e{forum}{path}/$e{script}/$input{forum}/">Return to Forum</a>);
		}
		print <<EOP;
		<br><a href="$e{forum}{path}/$e{script}/$input{forum}/manage_email">Access email Management Interface</a>
EOP
	} else {
		print <<EOP;
		eThreads needs the following information in order to enable your subscription:
		<p>
		<form action="$e{forum}{path}/$e{script}/$input{forum}/subscribe" method=get>
		<input type=hidden name=id value='$input{id}'>
		<table border=0>
		<tr bgcolor=$e{tweak}{htmlTITLE_BAR_COLOR}>
			<td colspan=2><font color=#$e{tweak}{htmlTITLE_FONT_COLOR}>
				<b>Subscribe '$e{user}{email}' to post $input{id}</b>
			</font></td>
		</tr>
EOP
		if ($input{id}) {
			print <<EOP;
			<tr bgcolor=$e{tweak}{htmlROW2_COLOR}>
				<td width=$e{tweak}{htmlCOL2_LEFT}><font color=#$e{tweak}{htmlROW2_FONT_COLOR}>
					alert level:
				</font></td>
				<td width=$e{tweak}{htmlCOL2_RIGHT}><font color=#$e{tweak}{htmlROW2_FONT_COLOR}>
					<input type=radio name="level" value="1"> - Replies on this Thread
					<br><input type=radio name="level" value="0"> - Replies Directly to this Post
				</font></td>
			</tr>
EOP
		} else {
			print qq(<input type=hidden name=level value=1>);
		}
		print <<EOP;
		<tr bgcolor=$e{tweak}{htmlROW1_COLOR}>
			<td width=$e{tweak}{htmlCOL2_LEFT}><font color=#$e{tweak}{htmlROW1_FONT_COLOR}>
				email contents:
			</font></td>
			<td width=$e{tweak}{htmlCOL2_RIGHT}><font color=#$e{tweak}{htmlROW1_FONT_COLOR}>
				<input type=radio name="contents" value=1> - Include Entire Post
				<br><input type=radio name="contents" value=0> - Send Only Title
			</font></td>
		<tr bgcolor=$e{tweak}{htmlTITLE_BAR_COLOR}>
			<td width=$e{tweak}{htmlCOL2_LEFT}><font color=#$e{tweak}{htmlTITLE_FONT_COLOR}>
				Submit:
			</font></td>
			<td width=$e{tweak}{htmlCOL2_RIGHT}><font color=#$e{tweak}{htmlTITLE_FONT_COLOR}>
				<input type=submit name='submit' value="Subscribe to Nofication">
			</font></td>
		</tr>
		</table>
EOP
	}

	$core->footer;
}

#----------

sub unsubscribe {
	$core->header("Unsubscribe from Notification");

	if ($input{approve}) {
		my $delete_sub = $m_db->prepare("
			delete from $e{settings}{db}{tbls}{subscriptions} 
			where forum = ? and uid = ? and pid = ?
		");

		$core->bail(0,"delete_sub: ".$m_db->errstr) unless (
			$delete_sub->execute($e{forum}{id},$e{user}{id},$input{id})
		);

		print <<EOP;
		Your subscription has been erased.
		<p>
		<a href="$e{forum}{path}/$e{script}/$input{forum}/manage_email">Return to the Subscription Manager</a>
		<br><a href="$e{forum}{path}/$e{script}/$input{forum}/">Return to Forum</a>
EOP

	} else {
		print <<EOP;
		Are you sure you wish to cancel your subscription to post $input{id}?
		<p>
		<a href="unsubscribe?id=$input{id}&approve=1">Yes</a> - - <a href="manage_email">No</a>
EOP
	}

	$core->footer;
}

#----------

sub manage_email {
	$core->header($e{language}{manage_your_subs});

	print <<EOP;
	The following email notification subscriptions are currently set up for your username:
	<p>
EOP

	my @data = [qq(
		<b>$e{language}{post}:</b>
	),qq(
		<b>$e{language}{options}:</b>
	)];	

	my $get_subscriptions = $m_db->prepare("
		select pid from $e{settings}{db}{tbls}{subscriptions} 
		where forum=? and uid=?
	");	

	$core->bail(0,$m_db->errstr) unless (
		$get_subscriptions->execute($e{forum}{id},$e{user}{id})
	);

	my $id;
	$get_subscriptions->bind_columns(\$id);
	while ($get_subscriptions->fetch) {
		my ($title,$link,$elink);
		if ($id) {
			my $get_title = $db->prepare("
				select title from $e{forum}{main_tbl} where id=?
			");
			$core->bail(0,$db->errstr) unless ($get_title->execute($id));
			$title = $get_title->fetchrow_array;

			$link = qq(<a href="$e{forum}{path}/$e{script}/$input{forum}/view_post?id=$id">);
			$elink = qq(</a>);
		} else {
			$title = $e{language}{entire_forum} if (!$id);
		}

		push @data, [
			$link . $title . $elink
		,qq(
			<a href="$e{forum}{path}/$e{script}/$input{forum}/unsubscribe?id=$id">Unsubscribe</a>
		)];
	}

	$core->htmltable_2col(
		title	=> $e{language}{email_subs},
		data	=> \@data,
	);

	print <<EOP;
	<p>
	<a href="$e{forum}{path}/$e{script}/$input{forum}/">Return to Forum</a>
EOP

	$core->footer;
}

#----------

sub modify_profile {
	$core->header("Modify Profile for: $e{user}{username}");

	unless ($input{email}) {
		my $get_user_info = $m_db->prepare("
			select name,email,signature,description 
			from $e{settings}{db}{tbls}{users} where username=?
		"); 
	
		$core->bail(0,$m_db->errstr) unless ($get_user_info->execute($e{user}{username}));
		my ($name,$email,$signature,$descript) = $get_user_info->fetchrow_array;
	
		print qq(<form action="$e{forum}{path}/$e{script}/$input{forum}/modify_profile" method=post>);
	
		my $options = qq(
			<input type=submit value="Modify Profile">
		);
	
		$_ = $e{look}{profile_html};
			s/#USER/$e{user}{username}/g;
			s!#EMAIL!<input type=text name=email size=40 value="$email"></a>!g;
			s/#NAME/<input name=name size=20 value="$name">/g;
			s/#SIG/<input type=text name=signature size=40 value="$signature">/g;
			s!#DESCRIPT!<textarea name=descript wrap=virtual cols=60 rows=5>$descript</textarea>!g;
			s/#OPTIONS/$options/g;
		print;
	} else {
		my $modify_profile = $m_db->prepare("
			update $e{settings}{db}{tbls}{users} set name=?, email=?, signature=?, description=? 
			where username=?
		");

		$core->bail(0,"modify_profile failure: ".$m_db->errstr) unless (
			$modify_profile->execute(
				$input{name},$input{email},$input{signature},$input{descript},$e{user}{username}
			)
		);

		print <<EOP;
		Your user profile was modified.  
		<a href="$e{forum}{path}/$e{script}/$input{forum}/profile?user=$e{user}{username}">View it Here</a>.
		<p><a href="$e{forum}{path}/$e{script}/$input{forum}/options">Return to Options</a>
EOP
	}

	$core->footer;
}

#----------

sub modify_post {
	$core->header("$e{language}{modify_post}: $input{id}");

	if (!$input{body}) {
		print qq(<form action="$e{forum}{path}/$e{script}/$input{forum}/modify" method=post>);
		print qq(<input type=hidden name=id value='$input{id}'>);
		$viewer->modify_post($input{id},1);
	} else {
		$input{body} =~ s/\n/\n<br>/g;
		$input{body} =~ s/\'/\\'/g;
		$input{title} =~ s/\'/\\'/g;

		$core->bail(0,$db->errstr) unless ($db->do("
			update $e{forum}{main_tbl} set body='$input{body}', title='$input{title}' 
			where id=$input{id} and username='$e{user}{username}'
		"));

		print <<EOP;
		Your post, <i>$input{title}</i>, was successfully modified.
		<a href="$e{forum}{path}/$e{script}/$input{forum}/view_post?id=$input{id}">View it here</a>.
EOP
	}

	$core->footer;
}

#-------------------------#
# Normal View Subroutines #
#-------------------------#

sub view_post {

	my %post = $core->get_post($input{id});
	$core->header("$e{language}{view_post}: $post{title}");
	my $options;

	if ($post{username} eq"$e{user}{username}") {
		$options = qq(
			<font size=2><a href="$e{forum}{path}/$e{script}/$input{forum}/modify?id=$input{id}">
			Modify Post</a></font> - - 
		);
	}

	$options .= qq(
		$e{language}{email}: 
		<a href="subscribe?id=$post{id}">$e{language}{subscribe}</a> - - 
		<a href="unsubscribe?id=$post{id}">$e{language}{unsubscribe}</a>
	) if ($e{settings}{email_subs});

	$viewer->view_post("$options","",%post);

	print "<p>";
	$core->buttons("post",$post{child_of});
	print "</p>";

	if ($post{children}) {
		$viewer->thread_table_top;
		$core->get_posts(0,$input{id});
		$viewer->print_threads($input{id},1,0);
		$viewer->thread_table_bottom;
	}

	$core->footer;
}

#----------

sub post {
	if ($input{preview}) {
		$core->header("Posting '$input{title}':");
		$viewer->preview_post;
		$core->footer;
	} elsif ($input{submit}) {
		$core->header("Posting '$input{title}':");
		$viewer->post;
		$core->footer;
	} else {
		$core->header("Compose Post");
		$viewer->compose_post;
		$core->footer;
	}
}

#-------------#
# Change Logs #
#-------------#

# $Log: members,v $
# Revision 1.12  2000/07/14 15:37:51  eric
# * email subscription manager works again
# * unsubscription updated to new format
#
# Revision 1.11  2000/07/10 20:54:21  eric
# * merged BCI and tgp devel trees
# * cleaned up some code in forum_info and cache
#
# Revision 1.10  2000/05/01 21:10:57  eric
# * a little domain rooting work
# * some fixes for Netscape's sucky CSS handling
#
# Revision 1.9  2000/04/29 16:39:19  eric
# * merging eThreads1_2-devel tree back into main eThreads tree
#
# Revision 1.7.4.9.4.7  2000/04/15 22:49:22  eric
# * made an exception in $core->start to not authenticate if its the
#   view script
# * moved all user notification to the remailer
#
# Revision 1.7.4.9.4.6  2000/02/23 06:51:25  eric
# * ummm...  i did stuff.  lots of stuff.
#
# Revision 1.7.4.9.4.5  2000/02/22 20:58:11  eric
# * rewrote core::start function and changed arg style
# * wrote forum finder
# * redid browse_child_forum backend to be generic
#
# Revision 1.7.4.9.4.4  2000/02/21 19:09:02  eric
# * updated user information to use new user tbl structure
#
# Revision 1.7.4.9.4.3  2000/02/12 02:45:52  eric
# * commiting changes from hosehead
#
# Revision 1.7.4.9.4.2  2000/01/17 23:07:04  eric
# * moved members script over to function_finder
# * added message preview support to members script
# * started work on going from preview mode back to edit mode
#
# Revision 1.7.4.9.4.1  1999/12/22 18:41:14  eric
# * new post code
# * schema work
#
# Revision 1.7.4.9  1999/09/03 12:25:03  eric
# * rolled $u_db into $m_db
#
# Revision 1.7.4.8  1999/08/26 14:04:25  eric
# * updated all headers to conform to standard eThreads header
#
# Revision 1.7.4.7  1999/08/25 18:51:25  eric
# * some changes to forum creation code
# * removed some hardcoded html table widths
#
# Revision 1.7.4.6  1999/08/24 20:08:12  eric
# * merging in changes from BCI tree
#
# Revision 1.7.4.5  1999/08/23 16:41:08  eric
# * changed assorted method=get's to method=post
#
# Revision 1.7.4.4  1999/08/18 07:43:46  eric
# * finally fixed the last of the $e{forum}{user_tbl} linger calls...  how
#   did those stay around so long?
# * members:   code for unsubscribe and manage_email
# * viewer.pm: code to call instamailer when post made
#
# Revision 1.7.4.3  1999/08/18 06:30:53  eric
# * forum_type modules and code
# * first revision of instamailer (subscription notifier)
# * some subscription code in members
#
# Revision 1.7.4.2  1999/06/25 20:27:50  eric
# * pointers to search code
#
# Revision 1.7.4.1  1999/06/22 14:37:34  eric
# * added support for password protected forums
#
# Revision 1.7  1999/06/02 23:54:15  eric
# * fixed child display in view_post
#
# Revision 1.6  1999/04/13 23:13:31  eric
# * took out faulty benchmarking code
#
# Revision 1.5  1999/04/09 06:23:57  eric
# * modify_post code
# * modify_profile code
#
# Revision 1.4  1999/04/07 02:44:20  eric
# * fixed typo in call to $viewer->print_threads
#
# Revision 1.3  1999/04/06 21:34:02  eric
# * abstracted thread display table structure to look themes
#
# Revision 1.2  1999/03/23 23:11:04  eric
# * language updates
#
# Revision 1.1  1999/03/22 00:41:47  eric
# * first revision of authenticated viewer
#
# Revision 1.8  1999/02/27 21:01:23  eric
# * moved core->start from viewer to view and added argument to pass
#   $core into viewer
#
# Revision 1.7  1999/02/27 17:44:08  eric
# * fixed call to bad_function wording
# * tweaks to conform to new $viewer->view_post syntax
#
# Revision 1.6  1999/02/19 20:54:18  eric
# * post stuff
# * fix to button_bar(post) thing to pass post info in
#
# Revision 1.5  1999/02/09 22:04:05  eric
# * various changes in adding eThreads::viewer compatibility
#
# Revision 1.4  1999/01/20 22:32:07  eric
# * added test for drop=all
# * added pointers to buttons
#
# Revision 1.3  1999/01/20 21:25:46  eric
# * added code for viewing posts
#
# Revision 1.2  1999/01/20 19:51:45  eric
# * added {status}{sidetrack} stuff
# * added hooks for printing threads
#
# Revision 1.1  1999/01/20 16:52:21  eric
# * shell of viewer script
# * prints header and footer using eThreads.pm
#

#---------------#
# End of Script #
#---------------#
