#---------------------------------------------------------------------
#  $Id: module.glomlet.0,v 1.2 2000/07/13 21:36:35 eric Exp $
#
#  eThreads - revolutionizing forums... again.
#  Copyright (C) 1999-2000 Eric Richardson
#
#       This program is free software; you can redistribute it and/or
#       modify it under the terms of the GNU General Public License
#       as published by the Free Software Foundation; either version 2
#       of the License, or (at your option) any later version.
#
#       This program is distributed in the hope that it will be useful,
#       but WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#       GNU General Public License for more details.
#
#       You should have received a copy of the GNU General Public License
#       along with this program; if not, write to the Free Software
#       Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
#       02111-1307, USA.
#
#       For information, contact eThreads:
#           ethreads@ethreads.com
#           http://ethreads.com
#
#  This is a glomlet.  Glomlets are small plugins that modify the 
#  behavior of a glomule class.  Multiple glomets may be layered 
#  onto a plain glomule class in order to achieve the desired effect.
#
#  This is the invitation-only glomlet.  It only allows users who have 
#  been granted browse rights to see the glomule
#
#---------------------------------------------------------------------

package eThreads::glomlet::0;

use strict;
use eThreads::core;
use vars qw(%e $core $viewer $m_db $db %post %input);

#----------

sub init {
	my $class = shift;

	# the first thing we do is init our core connection
	$core = eThreads::core->substart();

	my %g = (
		info	=> {
			name	=> "invitation-only",
			author	=> "eric richardson <e\@ethreads.com>",
		},
	);

	$core->add_sub_wrap(
		sub		=> "eThreads::glomule::$e{forum}{type}::startup",
		before	=> \&startup, 
	);

	$core->add_sub_wrap(
		sub		=> "eThreads::glomule::$e{forum}{type}::settings",
		after	=> \&settings,
	);

	bless ( \%g , $class );
}

#----------

sub startup {
	if ($e{script} eq"$e{settings}{scripts}{view}") {
		if ($input{function} eq"signup") {
			# we let them through.  they're just going to the signup page
		} else {
			eThreads::core->login;
		}
	} elsif (
		$e{script} eq"$e{settings}{scripts}{members}" ||
		$e{script} eq"$e{settings}{scripts}{admin}"
	) {
		eThreads::core->auth::require("browse","moderate");
	}
}

#----------

sub settings {
	my %settings = @Hook::WrapSub::result;
	@Hook::WrapSub::result = (
		%settings,
		options	=> {
			%{$settings{options}},
			use_browse_rights	=> 1,
		},
	);
}

#----------

1;
